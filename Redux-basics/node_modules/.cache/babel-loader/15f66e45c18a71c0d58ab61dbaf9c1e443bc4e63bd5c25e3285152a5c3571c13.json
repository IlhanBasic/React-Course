{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\n// Definisanje početnog stanja za counter\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\n\n// Kreiranje slice-a za counter\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter += action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// Definisanje početnog stanja za autentifikaciju\nconst initialAuthState = {\n  isAuthenticate: false\n};\n\n// Kreiranje slice-a za autentifikaciju\nconst authSlice = createSlice({\n  name: \"authentification\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticate = true;\n    },\n    logout(state) {\n      state.isAuthenticate = false;\n    }\n  }\n});\n\n// Primer custom reducer-a (može biti zakomentarisan ako nije potreban)\n/*\r\nconst counterReducer = (state = initialCounterState, action) => {\r\n  if (action.type === \"increment\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type === \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type === \"toggle\") {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n*/\n\n// Konfiguracija store-a pomoću configureStore\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\n\n// Izvoz akcija\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle","initialAuthState","isAuthenticate","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["C:/Users/PC/Desktop/Udemy React Course/Redux-Basics/src/store/index.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// Definisanje početnog stanja za counter\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\n\r\n// Kreiranje slice-a za counter\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter += action.payload;\r\n    },\r\n    toggle(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\n// Definisanje početnog stanja za autentifikaciju\r\nconst initialAuthState = { isAuthenticate: false };\r\n\r\n// Kreiranje slice-a za autentifikaciju\r\nconst authSlice = createSlice({\r\n  name: \"authentification\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state) {\r\n      state.isAuthenticate = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticate = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Primer custom reducer-a (može biti zakomentarisan ako nije potreban)\r\n/*\r\nconst counterReducer = (state = initialCounterState, action) => {\r\n  if (action.type === \"increment\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type === \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type === \"toggle\") {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n*/\r\n\r\n// Konfiguracija store-a pomoću configureStore\r\nconst store = configureStore({\r\n  reducer: {\r\n    counter: counterSlice.reducer,\r\n    auth: authSlice.reducer,\r\n  },\r\n});\r\n\r\n// Izvoz akcija\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;;AAE7D;AACA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACP,OAAO,IAAIU,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAE;MACZA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA,MAAMY,gBAAgB,GAAG;EAAEC,cAAc,EAAE;AAAM,CAAC;;AAElD;AACA,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EAC5BK,IAAI,EAAE,kBAAkB;EACxBC,YAAY,EAAES,gBAAgB;EAC9BR,QAAQ,EAAE;IACRW,KAAKA,CAACT,KAAK,EAAE;MACXA,KAAK,CAACO,cAAc,GAAG,IAAI;IAC7B,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAE;MACZA,KAAK,CAACO,cAAc,GAAG,KAAK;IAC9B;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMI,KAAK,GAAGrB,cAAc,CAAC;EAC3BsB,OAAO,EAAE;IACPnB,OAAO,EAAEE,YAAY,CAACiB,OAAO;IAC7BC,IAAI,EAAEL,SAAS,CAACI;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAE5C,eAAeJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}