{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Udemy React Course\\\\Advance React Routing\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", true);\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventsId;\n  console.log(id);\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","useLoaderData","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventsId","console","log","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/Udemy React Course/Advance React Routing/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useRouteLoaderData, json } from 'react-router-dom';\r\n\r\nimport EventItem from '../components/EventItem';\r\n\r\nfunction EventDetailPage() {\r\n  const data = useLoaderData();\r\n\r\n  return (\r\n    <EventItem event={data.event} />\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({request, params}) {\r\n  const id = params.eventsId;\r\n  console.log(id);\r\n\r\n  const response = await fetch('http://localhost:8080/events/' + id);\r\n\r\n  if (!response.ok) {\r\n    throw json({message: 'Could not fetch details for selected event.'}, {\r\n      status: 500\r\n    })\r\n  } else {\r\n    return response;\r\n  }\r\n}"],"mappings":";;AAAA,SAASA,kBAAkB,EAAEC,IAAI,QAAQ,kBAAkB;AAE3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGC,aAAa,CAAC,CAAC;EAE5B,oBACEJ,OAAA,CAACF,SAAS;IAACO,KAAK,EAAEF,IAAI,CAACE;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEpC;AAACP,EAAA,CANQD,eAAe;AAAAS,EAAA,GAAfT,eAAe;AAQxB,eAAeA,eAAe;AAE9B,OAAO,eAAeU,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC9C,MAAMC,EAAE,GAAGD,MAAM,CAACE,QAAQ;EAC1BC,OAAO,CAACC,GAAG,CAACH,EAAE,CAAC;EAEf,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGL,EAAE,CAAC;EAElE,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMvB,IAAI,CAAC;MAACwB,OAAO,EAAE;IAA6C,CAAC,EAAE;MACnEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAR,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}